# Configuración de Nixpacks para el entorno de Python

# Paquetes de Python necesarios
providers = ['python']

# Imagen base para construir
buildImage = 'ghcr.io/railwayapp/nixpacks:latest'

#[phases.setup]
# Instalación de paquetes del sistema necesarios para OpenCV y Python
#aptPkgs = [
#  'libgl1-mesa-glx',     # Necesaria para OpenCV
#  'libglib2.0-0',        # Dependencia requerida por OpenCV
#  'gcc'                  # Para compilar extensiones nativas de Python
#]

# Paquetes de Nix adicionales si los necesitas
nixPkgs = ['zlib']

[phases.install]
# Instalación de dependencias de Python en un entorno virtual
cmds = [
  "python -m venv .venv",                                # Crear un entorno virtual
  ". .venv/bin/activate",                                # Activar el entorno virtual
  "pip install --upgrade pip setuptools wheel",          # Actualizar herramientas esenciales de Python
  "pip install tensorflow-cpu gunicorn django opencv-python-headless matplotlib pillow"
]

[phases.build]
# Comandos para construir la aplicación (si aplica)
cmds = ["echo 'Build complete'"]

[start]
# Comando para iniciar la aplicación
cmd = ". .venv/bin/activate && gunicorn DRD.wsgi:application --bind 0.0.0.0:$PORT"

# Especificar la imagen de runtime si es necesario
runImage = 'python:3.12-slim'
